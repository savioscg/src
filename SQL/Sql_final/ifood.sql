CREATE TABLE Endereco (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    RUA VARCHAR(255),
    BAIRRO VARCHAR(100),
    CIDADE VARCHAR(100),
    ESTADO VARCHAR(50),
    NUMERO INT,
    COMPLEMENTO VARCHAR(255),
    PONTO_REFERENCIA VARCHAR(255),
    CEP VARCHAR(20)
);

CREATE TABLE Categoria (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    TIPO VARCHAR(50),
    NOME VARCHAR(100),
    DESCRICAO VARCHAR(255)
);

CREATE TABLE Restaurante (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(255) NOT NULL,
    END_ID INT,
    TELEFONE VARCHAR(20),
    CATEGORIA_ID INT,
    HORARIO VARCHAR(255),
    IS_RETIRADA BOOLEAN,
    FOREIGN KEY (END_ID) REFERENCES Endereco(ID),
    FOREIGN KEY (CATEGORIA_ID) REFERENCES Categoria(ID)
);

CREATE TABLE Promo (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(255),
    CODIGO VARCHAR(50),
    TIPO VARCHAR(50),
    VALOR DECIMAL(10, 2),
    VALIDADE DATE
);

CREATE TABLE StatusEntrega (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(50)
);

CREATE TABLE FormaDePagamento (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    TIPO_DE_PAGAMENTO VARCHAR(50) NOT NULL UNIQUE,
    DESCRICAO VARCHAR(255),
    ATIVO BOOLEAN DEFAULT TRUE
);
CREATE TABLE Pedido (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    data DATETIME,
    id_restaurante INT,
    valor DECIMAL(10, 2),
    taxa_entrega DECIMAL(10, 2),
    id_promo INT,
    id_status_entrega INT,
    id_forma_pagamento INT,
    OBS TEXT,
    troco DECIMAL(10, 2),
    ID_endereco INT,
    FOREIGN KEY (id_restaurante) REFERENCES Restaurante(ID),
    FOREIGN KEY (id_promo) REFERENCES Promo(ID),
    FOREIGN KEY (id_status_entrega) REFERENCES StatusEntrega(ID),
    FOREIGN KEY (id_forma_pagamento) REFERENCES FormaDePagamento(ID),
    FOREIGN KEY (ID_endereco) REFERENCES Endereco(ID)
);

CREATE TABLE Avaliacao (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    NOTA INT CHECK (NOTA BETWEEN 1 AND 5),
    COMENTARIO TEXT,
    PEDIDO INT,
    RESTAURANTE INT,
    DATA DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (PEDIDO) REFERENCES Pedido(ID),
    FOREIGN KEY (RESTAURANTE) REFERENCES Restaurante(ID)
);

CREATE TABLE HistoricoDePagamento (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    DATA DATETIME,
    ID_FORMA INT,
    ID_PEDIDO INT,
    VALOR DECIMAL(10, 2),
    FOREIGN KEY (ID_FORMA) REFERENCES FormaDePagamento(ID),
    FOREIGN KEY (ID_PEDIDO) REFERENCES Pedido(ID)
);


CREATE TABLE Produto (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(255),
    DESCRICAO TEXT,
    PRECO DECIMAL(10, 2),
    CATEGORIA_ID INT,
    RESTAURANTE_ID INT,
    FOREIGN KEY (CATEGORIA_ID) REFERENCES Categoria(ID),
    FOREIGN KEY (RESTAURANTE_ID) REFERENCES Restaurante(ID)
);

CREATE TABLE Acompanhamento (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(255),
    DESCRICAO TEXT,
    VALOR DECIMAL(10, 2)
);

CREATE TABLE Cadastro (
    ID_PRODUTO INT,
    ID_ACOMPANHAMENTO INT,
    PRIMARY KEY (ID_PRODUTO, ID_ACOMPANHAMENTO),
    FOREIGN KEY (ID_PRODUTO) REFERENCES Produto(ID),
    FOREIGN KEY (ID_ACOMPANHAMENTO) REFERENCES Acompanhamento(ID)
);

CREATE TABLE HistoricoDeEntrega (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    ID_STATUS_ENTREGA INT,
    ID_PEDIDO INT,
    DATETIME DATETIME,
    FOREIGN KEY (ID_STATUS_ENTREGA) REFERENCES StatusEntrega(ID),
    FOREIGN KEY (ID_PEDIDO) REFERENCES Pedido(ID)
);

CREATE TABLE Restaurante_Pagamento (
    ID_RESTAURANTE INT,
    ID_PAGAMENTO INT,
    PRIMARY KEY (ID_RESTAURANTE, ID_PAGAMENTO),
    FOREIGN KEY (ID_RESTAURANTE) REFERENCES Restaurante(ID),
    FOREIGN KEY (ID_PAGAMENTO) REFERENCES FormaDePagamento(ID)
);

CREATE TABLE Pedido_Produto (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    ID_PEDIDO INT,
    ID_PRODUTO INT,
    QUANTIDADE INT,
    FOREIGN KEY (ID_PEDIDO) REFERENCES Pedido(ID),
    FOREIGN KEY (ID_PRODUTO) REFERENCES Produto(ID)
);

CREATE TABLE Pedido_Produto_Acompanhamento (
    ID_PEDIDO_PRODUTO INT,
    ID_ACOMPANHAMENTO INT,
    PRIMARY KEY (ID_PEDIDO_PRODUTO, ID_ACOMPANHAMENTO),
    FOREIGN KEY (ID_PEDIDO_PRODUTO) REFERENCES Pedido_Produto(ID),
    FOREIGN KEY (ID_ACOMPANHAMENTO) REFERENCES Acompanhamento(ID)
);	